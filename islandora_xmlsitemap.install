<?php

/**
 * @file
 * This file contains all install related hooks.
 */

/**
 * Implements hook_uninstall().
 */
function islandora_xmlsitemap_uninstall() {
  $variables = array(
    'islandora_xmlsitemap_number_of_pids_to_process',
    'islandora_xmlsitemap_last_modified_value',
    'islandora_xmlsitemap_last_modified_field',
  );
  array_walk($variables, 'variable_del');
}

/**
 * Implements hook_install().
 */
function islandora_xmlsitemap_install() {
  islandora_xmlsitemap_set_initial_value();
}

/**
 * Implements hook_schema().
 *
 * @see https://jira.duraspace.org/browse/ISLANDORA-1784
 */
function islandora_xmlsitemap_schema() {
  return array(
    // XXX: This table satisfies a race condition (details in the @see for this
    // method); the best way to satisfy this condition was using an
    // auto-incrementing ID in a table.
    'islandora_xmlsitemap_entry_ids' => array(
      'description' => 'Autoincrementing table to store IDs we can use for xmlsitemap table entries.',
      'fields' => array(
        'id' => array(
          'description' => 'Current ID number',
          'type' => 'serial',
          'not null' => TRUE,
        ),
        'pid' => array(
          'description' => 'The PID relating to this ID.',
          'type' => 'varchar',
          'length' => 255,
        ),
      ),
      'primary key' => array('id'),
    ),
  );
}

/**
 * Add the ID table schema in.
 */
function islandora_xmlsitemap_update_7000(&$sandbox = array()) {
  $schema = islandora_xmlsitemap_schema();
  db_create_table('islandora_xmlsitemap_entry_ids', $schema['islandora_xmlsitemap_entry_ids']);
  islandora_xmlsitemap_set_initial_value();
}

/**
 * Sets the initial ID value of the islandora_xmlsitemap_entry_ids table.
 *
 * XXX: It's possible for the 'custom' type in xmlsitemap to already be in use,
 * so we're just making sure we're out of range of existing IDs.
 */
function islandora_xmlsitemap_set_initial_value() {
  // Get the target initial value.
  $q = db_select('xmlsitemap', 'x');
  $q->addExpression('MAX(id)');
  $q->condition('type', 'custom', '=');
  $current_id = $q->execute()->fetchField();
  $target = $current_id !== FALSE ? $current_id + 1 : 1;

  // Insert it.
  $q = db_insert('islandora_xmlsitemap_entry_ids')
    ->fields(array(
      'pid' => NULL,
      'id' => $target,
    ))
    ->execute();
  // Delete it.
  module_load_include('inc', 'islandora_xmlsitemap', 'includes/db');
  islandora_xmlsitemap_delete_increment_record(NULL);
}
